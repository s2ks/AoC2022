#!/usr/bin/env python3

import sys

input = sys.stdin.read().rstrip()
packets = [line for line in input.split("\n\n")]

idx = 1
ordered = []

def compare(left, right):
    if isinstance(left, int) and isinstance(right, list):
        left = [left]
    if isinstance(left, list) and isinstance(right, int):
        right = [right]

    if isinstance(left, int) and isinstance(right, int):
        if left == right:
            return 0
        if left < right:
            return -1
        if left > right:
            return 1
    else:
        length = min(len(left), len(right))
        for i in range(length):
            tmp = compare(left[i], right[i])
            if tmp:
                return tmp

        ll = len(left)
        lr = len(right)
        return 1 if ll > lr else -1 if ll < lr else 0

for p in packets:
    left, right = p.split("\n")

    left = eval(left)
    right = eval(right)

    r = compare(left, right)

    if r < 0:
        ordered.append(idx)
    if r == 0 and len(left) < len(right):
        ordered.append(idx)


    idx += 1

print(sum(ordered))
