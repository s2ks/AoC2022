#!/usr/bin/env python3

import sys

input = sys.stdin.read().rstrip()
packets = [line for line in input.split("\n\n")]

idx = 1
ordered = []

sorted = []

def compare(left, right):
    if isinstance(left, int) and isinstance(right, list):
        left = [left]
    if isinstance(left, list) and isinstance(right, int):
        right = [right]

    if isinstance(left, int) and isinstance(right, int):
        if left == right:
            return 0
        if left < right:
            return -1
        if left > right:
            return 1
    else:
        length = min(len(left), len(right))
        for i in range(length):
            tmp = compare(left[i], right[i])
            if tmp:
                return tmp

        ll = len(left)
        lr = len(right)
        return 1 if ll > lr else -1 if ll < lr else 0

for p in packets:
    left, right = p.split("\n")

    left = eval(left)
    right = eval(right)

    sorted.append(left)
    sorted.append(right)

done = 0

sorted.append([[2]])
sorted.append([[6]])

while not done:
    done = 1
    for i in range(1, len(sorted)):
        l = sorted[i-1]
        r = sorted[i]

        c = compare(l, r)
        if c > 0:
            sorted[i-1] = r
            sorted[i] = l
            done = 0



print((sorted.index([[2]])+1) * (sorted.index([[6]])+1))
# print(sum(ordered))
